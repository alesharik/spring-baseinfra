package com.alesharik.currency.provider.hardcoded;

import com.alesharik.currency.provider.CurrencyProvider;
import com.alesharik.currency.provider.domain.Currency;
import lombok.Getter;
import org.springframework.lang.NonNull;

import java.util.List;
import java.util.Map;
import java.util.stream.Collectors;

public class HardcodedCurrencyProvider implements CurrencyProvider {
    @Getter
    private final List<Currency> currencies = List.of(
            new Currency("Lek", "ALL"),
            new Currency("؋", "AFN"),
            new Currency("$", "ARS"),
            new Currency("ƒ", "AWG"),
            new Currency("$", "AUD"),
            new Currency("₼", "AZN"),
            new Currency("$", "BSD"),
            new Currency("$", "BBD"),
            new Currency("Br", "BYN"),
            new Currency("BZ$", "BZD"),
            new Currency("$", "BMD"),
            new Currency("$b", "BOB"),
            new Currency("KM", "BAM"),
            new Currency("P", "BWP"),
            new Currency("лв", "BGN"),
            new Currency("R$", "BRL"),
            new Currency("$", "BND"),
            new Currency("៛", "KHR"),
            new Currency("$", "CAD"),
            new Currency("$", "KYD"),
            new Currency("$", "CLP"),
            new Currency("¥", "CNY"),
            new Currency("$", "COP"),
            new Currency("₡", "CRC"),
            new Currency("kn", "HRK"),
            new Currency("₱", "CUP"),
            new Currency("Kč", "CZK"),
            new Currency("kr", "DKK"),
            new Currency("RD$", "DOP"),
            new Currency("$", "XCD"),
            new Currency("£", "EGP"),
            new Currency("$", "SVC"),
            new Currency("€", "EUR"),
            new Currency("£", "FKP"),
            new Currency("$", "FJD"),
            new Currency("¢", "GHS"),
            new Currency("£", "GIP"),
            new Currency("Q", "GTQ"),
            new Currency("£", "GGP"),
            new Currency("$", "GYD"),
            new Currency("L", "HNL"),
            new Currency("$", "HKD"),
            new Currency("Ft", "HUF"),
            new Currency("kr", "ISK"),
            new Currency("₹", "INR"),
            new Currency("Rp", "IDR"),
            new Currency("﷼", "IRR"),
            new Currency("£", "IMP"),
            new Currency("₪", "ILS"),
            new Currency("J$", "JMD"),
            new Currency("¥", "JPY"),
            new Currency("£", "JEP"),
            new Currency("₸", "KZT"),
            new Currency("₩", "KPW"),
            new Currency("лв", "KGS"),
            new Currency("₭", "LAK"),
            new Currency("£", "LBP"),
            new Currency("$", "LRD"),
            new Currency("ден", "MKD"),
            new Currency("RM", "MYR"),
            new Currency("₨", "MUR"),
            new Currency("$", "MXN"),
            new Currency("₮", "MNT"),
            new Currency(" د.إ", "MAD"),
            new Currency("MT", "MZN"),
            new Currency("$", "NAD"),
            new Currency("₨", "NPR"),
            new Currency("ƒ", "ANG"),
            new Currency("$", "NZD"),
            new Currency("C$", "NIO"),
            new Currency("₦", "NGN"),
            new Currency("kr", "NOK"),
            new Currency("﷼", "OMR"),
            new Currency("₨", "PKR"),
            new Currency("B/.", "PAB"),
            new Currency("Gs", "PYG"),
            new Currency("S/.", "PEN"),
            new Currency("₱", "PHP"),
            new Currency("zł", "PLN"),
            new Currency("﷼", "QAR"),
            new Currency("lei", "RON"),
            new Currency("₽", "RUB"),
            new Currency("£", "SHP"),
            new Currency("﷼", "SAR"),
            new Currency("Дин.", "RSD"),
            new Currency("₨", "SCR"),
            new Currency("$", "SGD"),
            new Currency("$", "SBD"),
            new Currency("S", "SOS"),
            new Currency("₩", "KRW"),
            new Currency("R", "ZAR"),
            new Currency("₨", "LKR"),
            new Currency("kr", "SEK"),
            new Currency("CHF", "CHF"),
            new Currency("$", "SRD"),
            new Currency("£", "SYP"),
            new Currency("NT$", "TWD"),
            new Currency("฿", "THB"),
            new Currency("TT$", "TTD"),
            new Currency("₺", "TRY"),
            new Currency("$", "TVD"),
            new Currency("₴", "UAH"),
            new Currency(" د.إ", "AED"),
            new Currency("£", "GBP"),
            new Currency("$", "USD"),
            new Currency("$U", "UYU"),
            new Currency("лв", "UZS"),
            new Currency("Bs", "VEF"),
            new Currency("₫", "VND"),
            new Currency("﷼", "YER"),
            new Currency("Z$", "ZWD")
    );

    private final Map<String, String> codes = currencies.stream().collect(Collectors.toMap(Currency::code, Currency::symbol));

    @NonNull
    @Override
    public String getSymbolForCode(@NonNull String currencyCode) {
        return codes.get(currencyCode);
    }
}
